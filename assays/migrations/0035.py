# Generated by Django 2.1.9 on 2019-06-14 22:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('assays', '0034'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssayReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('signed_off_date', models.DateTimeField(blank=True, null=True)),
                ('locked', models.BooleanField(default=False, help_text='Check the box and save to lock the entry. Uncheck and save to enable editing.')),
                ('flagged', models.BooleanField(default=False, help_text='Check box to flag for review')),
                ('reason_for_flag', models.CharField(blank=True, default='', help_text='Reason for why this entry was flagged', max_length=300)),
                ('pubmed_id', models.CharField(blank=True, default='N/A', max_length=40, verbose_name='PubMed ID')),
                ('title', models.CharField(max_length=2000, unique=True, verbose_name='Title')),
                ('authors', models.CharField(max_length=2000, verbose_name='Authors')),
                ('abstract', models.CharField(blank=True, default='', max_length=4000, verbose_name='Abstract')),
                ('publication', models.CharField(max_length=255, verbose_name='Publication')),
                ('year', models.CharField(max_length=4, verbose_name='Year')),
                ('doi', models.CharField(blank=True, default='N/A', max_length=100, verbose_name='DOI')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assayreference_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assayreference_modified_by', to=settings.AUTH_USER_MODEL)),
                ('signed_off_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assayreference_signed_off_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssayStudyReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assays.AssayReference')),
                ('reference_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudy')),
            ],
        ),
        migrations.CreateModel(
            name='AssayStudySet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('signed_off_date', models.DateTimeField(blank=True, null=True)),
                ('locked', models.BooleanField(default=False, help_text='Check the box and save to lock the entry. Uncheck and save to enable editing.')),
                ('flagged', models.BooleanField(default=False, help_text='Check box to flag for review')),
                ('reason_for_flag', models.CharField(blank=True, default='', help_text='Reason for why this entry was flagged', max_length=300)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=2000)),
                ('assays', models.ManyToManyField(to='assays.AssayStudyAssay')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assaystudyset_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assaystudyset_modified_by', to=settings.AUTH_USER_MODEL)),
                ('signed_off_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assaystudyset_signed_off_by', to=settings.AUTH_USER_MODEL)),
                ('studies', models.ManyToManyField(to='assays.AssayStudy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssayStudySetReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assays.AssayReference')),
                ('reference_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudySet')),
            ],
        ),
        migrations.AlterField(
            model_name='assaychipsetup',
            name='organ_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='microdevices.OrganModel', verbose_name='MPS Model Name'),
        ),
        migrations.AlterField(
            model_name='assaychipsetup',
            name='organ_model_protocol',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='microdevices.OrganModelProtocol', verbose_name='MPS Model Protocol'),
        ),
        migrations.AlterUniqueTogether(
            name='assaystudysetreference',
            unique_together={('reference', 'reference_for')},
        ),
        migrations.AlterUniqueTogether(
            name='assaystudyreference',
            unique_together={('reference', 'reference_for')},
        ),
    ]
