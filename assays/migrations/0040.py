# Generated by Django 2.2.13 on 2020-06-17 23:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('assays', '0039'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssayPlateReaderMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('signed_off_date', models.DateTimeField(blank=True, null=True)),
                ('locked', models.BooleanField(default=False, help_text='Check the box and save to block automatic migration to *Public Access*, 1-year after sign off. Uncheck and save to enable automatic migration to *Public Access*, 1-year after sign off. While this is checked, automatic approvals for Stakeholders are also prevented.', verbose_name='Keep Private Indefinitely (Locked)')),
                ('flagged', models.BooleanField(default=False, help_text='Check box to flag for review')),
                ('reason_for_flag', models.CharField(blank=True, default='', help_text='Reason for why this entry was flagged', max_length=300)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, default='', max_length=2000)),
                ('device', models.IntegerField(blank=True, choices=[(24, '24 Well Plate'), (96, '96 Well Plate'), (384, '384 Well Plate')], default=96)),
                ('time_unit', models.CharField(blank=True, choices=[('day', 'Day'), ('hour', 'Hour'), ('minute', 'Minute')], default='day', max_length=8, null=True)),
                ('volume_unit', models.CharField(blank=True, choices=[('mL', 'mL'), ('µL', 'µL'), ('nL', 'nL')], default='mL', max_length=2, null=True)),
                ('well_volume', models.FloatField(blank=True, null=True)),
                ('cell_count', models.FloatField(blank=True, null=True)),
                ('standard_molecular_weight', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assayplatereadermap_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assayplatereadermap_modified_by', to=settings.AUTH_USER_MODEL)),
                ('signed_off_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assayplatereadermap_signed_off_by', to=settings.AUTH_USER_MODEL)),
                ('standard_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.PhysicalUnits')),
                ('study', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudy')),
                ('study_assay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudyAssay')),
            ],
            options={
                'verbose_name_plural': 'Assay Plate Reader Map',
            },
        ),
        migrations.CreateModel(
            name='AssayPlateReaderMapDataFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='file added - 20200617-19:25:52', max_length=2000, null=True)),
                ('plate_reader_file', models.FileField(blank=True, null=True, upload_to='over_write_in_views.py', verbose_name='Plate Reader Data File')),
                ('file_delimiter', models.CharField(blank=True, choices=[('comma', 'comma'), ('space', 'space'), ('tab', 'tab')], default='tab', max_length=8)),
                ('upload_plate_size', models.IntegerField(blank=True, choices=[(24, '24 Well Plate'), (96, '96 Well Plate'), (384, '384 Well Plate')], null=True)),
                ('study', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudy')),
            ],
            options={
                'verbose_name': 'Assay Plate Reader Imported Data File',
                'unique_together': {('study', 'plate_reader_file', 'description')},
            },
        ),
        migrations.CreateModel(
            name='AssayPlateReaderMapDataFileBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_processing_parsable', models.CharField(blank=True, default='', max_length=2000)),
                ('data_block', models.IntegerField(default=999, null=True)),
                ('data_block_metadata', models.CharField(blank=True, max_length=255)),
                ('line_start', models.IntegerField(default=999, null=True)),
                ('line_end', models.IntegerField(default=999, null=True)),
                ('delimited_start', models.IntegerField(default=999, null=True)),
                ('delimited_end', models.IntegerField(default=999, null=True)),
                ('over_write_sample_time', models.IntegerField(blank=True, null=True)),
                ('assayplatereadermap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayPlateReaderMap')),
                ('assayplatereadermapdatafile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayPlateReaderMapDataFile')),
                ('study', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudy')),
            ],
            options={
                'verbose_name': 'Assay Plate Reader File Data Block',
            },
        ),
        migrations.CreateModel(
            name='AssayPlateReaderMapItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='none', max_length=100)),
                ('plate_index', models.IntegerField(blank=True, default=999)),
                ('well_use', models.CharField(blank=True, choices=[('sample', 'Sample'), ('standard', 'Standard'), ('blank', 'Blank'), ('empty', 'Empty/Unused')], default='empty', max_length=8, verbose_name='Well Use')),
                ('standard_value', models.FloatField(blank=True, default=0, null=True)),
                ('dilution_factor', models.FloatField(blank=True, default=1, null=True)),
                ('collection_volume', models.FloatField(blank=True, default=1, null=True)),
                ('collection_time', models.FloatField(blank=True, default=1, null=True)),
                ('default_time', models.FloatField(blank=True, default=0, null=True)),
                ('assayplatereadermap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assays.AssayPlateReaderMap')),
                ('location', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssaySampleLocation')),
                ('matrix_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayMatrixItem')),
                ('study', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudy')),
            ],
            options={
                'verbose_name': 'Assay Plate Reader Map Item',
                'unique_together': {('study', 'assayplatereadermap', 'plate_index')},
            },
        ),
        migrations.CreateModel(
            name='AbstractClassAssayStudyAssay',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('assays.assaystudyassay',),
        ),
        migrations.CreateModel(
            name='AssayPlateReaderMapItemValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_value', models.FloatField(blank=True, null=True)),
                ('time', models.FloatField(blank=True, default=0, null=True)),
                ('replaced', models.BooleanField(default=False)),
                ('assayplatereadermap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assays.AssayPlateReaderMap')),
                ('assayplatereadermapdatafile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayPlateReaderMapDataFile')),
                ('assayplatereadermapdatafileblock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayPlateReaderMapDataFileBlock')),
                ('assayplatereadermapitem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayPlateReaderMapItem')),
                ('study', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='assays.AssayStudy')),
            ],
            options={
                'verbose_name': 'Assay Plate Reader Map Raw Value',
                'unique_together': {('study', 'assayplatereadermap', 'assayplatereadermapdatafile', 'assayplatereadermapdatafileblock', 'assayplatereadermapitem', 'time')},
            },
        ),
    ]
